# SPDX-License-Identifier: BUSL-1.1

default_platform(:ios)

TEMP_KEYCHAIN_USER = ENV["TEMP_KEYCHAIN_USER"]
TEMP_KEYCHAIN_PASSWORD = ENV["TEMP_KEYCHAIN_PASSWORD"]
APPLE_ISSUER_ID = ENV["APPLE_ISSUER_ID"]
APPLE_KEY_ID = ENV["APPLE_KEY_ID"]
APPLE_KEY_CONTENT = ENV["APPLE_KEY_CONTENT"]
BASIC_AUTH = ENV["BASIC_AUTH"]
FASTLANE_REPO_URL = ENV["FASTLANE_REPO_URL"]

def delete_temp_keychain(name)
    delete_keychain(
      name: name
    ) if File.exist? File.expand_path("~/Library/Keychains/#{name}-db")
end

def create_temp_keychain(name, password)
    create_keychain(
        name: name,
        password: password,
        unlock: false,
        timeout: 3000,
    )
end

def ensure_temp_keychain(name, password)
    delete_temp_keychain(name)
    create_temp_keychain(name, password)
end

def product_bundle_id(xcodeproj)
    project = Xcodeproj::Project.open(xcodeproj)
    scheme = project.native_targets[0]
    build_configuration = scheme.build_configurations.first
    build_configuration.build_settings['PRODUCT_BUNDLE_IDENTIFIER']
end

platform :ios do
    desc "Push a new staging build to TestFlight"
    lane :buildStagingTestFlight do
        ruby_version("2.7.4")
        xcodeproj = "../ios/ice.xcodeproj"
        workspace = "./ios/ice.xcworkspace"
        main_bundle_id = product_bundle_id(xcodeproj)

        ensure_temp_keychain(TEMP_KEYCHAIN_USER, TEMP_KEYCHAIN_PASSWORD)

        api_key = app_store_connect_api_key(
            key_id: APPLE_KEY_ID,
            issuer_id: APPLE_ISSUER_ID,
            key_content: APPLE_KEY_CONTENT,            
            duration: 1200,            
            in_house: false,
        )

        cocoapods(
            clean_install: true,
            podfile: "./ios/Podfile",
        )

        match(
            git_url: FASTLANE_REPO_URL,
            readonly: true,
            app_identifier: main_bundle_id,
            keychain_name: TEMP_KEYCHAIN_USER,
            keychain_password: TEMP_KEYCHAIN_PASSWORD,
            api_key: api_key,
            git_basic_authorization: BASIC_AUTH,
        )

        gym(
            configuration: "Release",
            workspace: workspace,
            export_method: "app-store",
            export_options: {
                provisioningProfiles: { 
                    # autogenerated env variable from match lane
                    main_bundle_id => ENV["sigh_#{main_bundle_id}_appstore_profile-name"],
                }
            }
        )

        pilot(
            app_identifier: main_bundle_id,
            skip_waiting_for_build_processing: true,
            api_key: api_key,
            skip_submission: true,
            distribute_external: false,
            notify_external_testers: false,
        )
    end
end
